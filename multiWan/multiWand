#!/bin/bash
#  
#  multiWand
#  
#  Copyright (C) 2013 - Luis Fernando Maldonado Arango
#  Copyright (C) 2013 - Summan S.A.S.
#  
#  multiWand is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  multiWand is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with multiWand.  If not, see <http://www.gnu.org/licenses/>.
#
(
. /etc/multiWan/multiWan.conf

if [ $(whoami) != "root" ]; then
        echo "You must be root to run this!" ; echo ; exit 1
fi

function getvalue() {
        index=$1
        VAR=$2

        n=1
        for f in ${VAR} ; do
                if [ "${n}" == "${index}" ]; then
                        echo "$f"
                        break
                fi
                n=$(($n + 1))
        done
}

routecmd="ip route replace default scope global"

i=1
for iface in $WANIFACE  ; do
	IP=`ifconfig $iface |grep "inet addr" |cut -f 2 -d ":" |awk '{print $1}'`
	NET=$(getvalue $i "$NETWORKS")
	GW=$(getvalue $i "$GATEWAYS")
	WT=$(getvalue $i "$WEIGHTS")
	routecmd="${routecmd} nexthop via ${GW} dev ${iface} weight ${WT}"
	i=$(($i + 1))
done

# Watchdog started

# 0 == all links ok, 1 == some link down
STATE=0

while : ; do

		if [ $VERBOSE -eq 1 ]; then
			echo -e "[] Sleeping, state=$STATE"
		fi
		sleep 30s

		IFINDEX=1
		DOWN=""
		DOWNCOUNT=0
		for iface in $WANIFACE ; do

			FAIL=0
			COUNT=0
			IP=`ifconfig $iface |grep "inet addr" |cut -f 2 -d ":" |awk '{print $1}'`
			for TESTHOST in $TARGETHOSTS ; do
                                COUNT=$(($COUNT + 1))
				dig +time=1 +tries=1 +short -b $IP $TESTHOST > /dev/null 2>&1
				if [ $? -ne 0 ]; then
					FAIL=$(($FAIL + 1))
				fi
			done
			if [ $FAIL -eq $COUNT ]; then
				echo "[WARN] $iface is down!"
				if [ $STATE -ne 1 ]; then
					echo "Switching state $STATE -> 1"
					STATE=1
				fi
				DOWN="${DOWN} $IFINDEX"
				DOWNCOUNT=$(($DOWNCOUNT + 1))
			fi
			IFINDEX=$(($IFINDEX + 1))
		done

		if [ $DOWNCOUNT -eq 0 ]; then
			if [ $STATE -eq 1 ]; then
				echo
				echo "[] All links up and running :)"
				${routecmd}
				STATE=0
				echo "Switching state 1 -> 0"
			fi
			# if no interface is down, go to the next cycle
			continue
		fi

		cmd="ip route replace default scope global"

		IFINDEX=1
		for iface in $WANIFACE ; do
			for lnkdwn in $DOWN ; do
				if [ $lnkdwn -ne $IFINDEX ]; then
					GW=$(getvalue $IFINDEX "$GATEWAYS")
					WT=$(getvalue $IFINDEX "$WEIGHTS")
					cmd="${cmd} nexthop via ${GW} dev ${iface} weight ${WT}"
				fi
			done
			IFINDEX=$(($IFINDEX + 1))
		done

		if [ $VERBOSE -eq 1 ]; then
			set -x
			${cmd}
			set +x
			echo
		else
			${cmd} 2>/dev/null
		fi
done
)&
disown -h $!
